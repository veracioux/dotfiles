#+TITLE: i3 config
#+PROPERTY: header-args :tangle (haris/tangle-home ".config/i3/config") :mkdirp yes
#+begin_src i3wm-config :exports none :mkdirp yes
  # -*- mode: emacs-lisp-mode; -*- vim: filetype=i3 shiftwidth=2
#+end_src

* Helper scripts and local variables
#+PROPERTIES
:header-args: :results output :mkdirp yes
#+END

NOTE: See local variables defined [[*Local variables][at the bottom]]. /I would really like to define
them in a babel code block, but I don't know how or if it's possible at all./

These scripts are used in the other sections:
#+NAME: mic-volume-up
#+begin_src shell :tangle (eval mic-volume-up-filename) :shebang "#!/usr/bin/env sh"
  pactl set-source-volume "$(pactl get-default-source)" +5%
#+end_src
#+NAME: mic-volume-down
#+begin_src shell :tangle (eval mic-volume-down-filename) :shebang "#!/usr/bin/env sh"
  pactl set-source-volume "$(pactl get-default-source)" -5%
#+end_src
#+NAME: mic-mute-toggle
#+begin_src shell :tangle (eval mic-mute-toggle-filename) :shebang "#!/usr/bin/env sh"
  pactl set-source-mute "$(pactl get-default-source)" toggle
#+end_src

This code block wraps elisp's =eval= function so it can be called using noweb.
#+NAME: eval
#+begin_src emacs-lisp :var arg="nil" :cache yes :exports none :tangle no
(eval (car (read-from-string arg)))
#+end_src

#+RESULTS[1983f503b47e686cea6cc9ca713ebe0f82b9862c]: eval

* Variable definitions
#+begin_src i3wm-config
  # vim: filetype=i3

  # Default mod key
  set $mod          Mod4

  # Common sizes
  set $resizeW0     resize set width 20
  set $resizeH0     resize set height 20
  set $resize1      resize set width 710  height   600
  set $resize2      resize set width 900  height   700
  set $resize3      resize set width 1100 height  800
  set $resize4      resize set width 1400 height  900
  set $resize_term  resize set width 710

  # Prefix n stands for normal
  set $col_n_k #1e1e1e
  set $col_n_r #ff5555
  set $col_n_g #5ac2a8
  set $col_n_y #f2b374
  set $col_n_b #6980fa
  set $col_n_m #d098ff
  set $col_n_c #8cceff
  set $col_n_w #92aab7

  # Prefix b stands for bright
  set $col_b_k #6b746b
  set $col_b_r #ff8c8c
  set $col_b_g #98eb98
  set $col_b_y #e0d97b
  set $col_b_b #99a3ff
  set $col_b_m #f298c3
  set $col_b_c #a6d9ff
  set $col_b_w #dddddd

  # Extra colors
  set $col_x16 #303030
  # Black color with transparency
  set $col_a_k #1e1e1ecc
  # Bright magenta with transparency for bar separator
  set $col_a_m #f298c377

  # Bind mode names
  set $mode_resize  " resize"
  set $mode_session "Session"
  set $mode_wm      " WM"
  set $mode_qr      " QR [i]n [o]ut [s]creen"
  set $mode_org     " ORG [t]odo [k]knowledge [j]ournal [n]otes [c]omputers [l]ifestyle"
  set $mode_mic     " Microphone [+] [-] [m]ute"
#+end_src
* Visuals
#+begin_src i3wm-config
  font pango:Source Code Pro, Icons bold 10
  hide_edge_borders none
  gaps inner 6
  gaps outer 0
  for_window [all]                      title_format " %title"
  # This one prevents _MOTIF_WM_HINTS to force a window title
  for_window [all]                      border pixel 2
  for_window [window_type="dialog"]     border normal 2
  for_window [window_type="popup_menu"] border normal 2

  # Colors
  # class                 border    backgr.   text      indicator child_border
  client.focused          $col_n_b  $col_b_b  $col_n_k  $col_b_m  $col_b_b
  client.unfocused        $col_n_m  $col_n_m  $col_n_k  $col_n_m  $col_b_k
  client.focused_inactive $col_n_b  $col_b_b  $col_n_k  $col_n_m  $col_b_k
  client.urgent           $col_n_y  $col_n_y  $col_n_k  $col_n_y  $col_n_y
#+end_src
* Behavior
#+begin_src i3wm-config
  focus_follows_mouse no
  popup_during_fullscreen leave_fullscreen
  workspace_auto_back_and_forth yes
  for_window [instance="Float" class="Alacritty"] floating enable
#+end_src
* Startup
#+begin_src i3wm-config
  exec_always --no-startup-id \
  /home/haris/.local/lib/i3/i3-cycle-focus.py --history 2
  # TODO exec_always --no-startup-id "autotiling"
  # Use pactl to adjust volume in PulseAudio.
  set $refresh_i3status killall -SIGUSR1 i3status
#+end_src
* Bindings
#+begin_src i3wm-config :noweb yes
  # Manipulation using mouse
  floating_modifier $mod

  # kill focused window
  bindsym $mod+w      kill
  bindsym $mod+Ctrl+w exec xdotool getactivewindow windowkill

  # Navigation
  bindsym $mod+m            scratchpad show
  bindsym $mod+Shift+m      move scratchpad

  # Change focus
  bindsym $mod+h            focus left
  bindsym $mod+j            focus down
  bindsym $mod+k            focus up
  bindsym $mod+l            focus right
  bindsym $mod+space        focus mode_toggle
  bindsym $mod+a            focus parent
  bindsym $mod+d            focus child

  # move focused window
  bindsym $mod+Shift+h      move left     30
  bindsym $mod+Shift+j      move down     30
  bindsym $mod+Shift+k      move up       30
  bindsym $mod+Shift+l      move right    30

  # Layout manipulation
  bindsym $mod+e            fullscreen toggle
  bindsym $mod+Shift+space  floating toggle
  bindsym $mod+b            bar mode toggle

  # Resize window
  bindsym $mod+plus         resize grow   width   20;
  bindsym $mod+minus        resize shrink width   20;
  bindsym $mod+Shift+plus   resize grow                 height  20;
  bindsym $mod+Shift+minus  resize shrink               height  20;
  bindsym $mod+g            move position center

  mode $mode_resize {
    bindsym w               resize  shrink  width   1
    bindsym Shift+w         resize  grow    width   1
    bindsym h               resize  shrink  height  1
    bindsym Shift+h         resize  grow    height  1

    bindsym plus            resize  grow    width   20; move position center
    bindsym Shift+plus      resize  grow    height  20; move position center
    bindsym minus           resize  shrink  width   20; move position center
    bindsym Shift+minus     resize  shrink  height  20; move position center

    # equal key on my keyboard
    bindsym Shift+0         exec --no-startup-id i3_balance_workspace

    bindsym t               $resize_term; mode default

    # Some standard sizes
    bindsym 0               $resizeW0
    bindsym Shift+0         $resizeH0
    bindsym 1               $resize1; move position center
    bindsym Shift+1         $resize1
    bindsym 2               $resize2; move position center
    bindsym Shift+2         $resize2
    bindsym 3               $resize3; move position center
    bindsym Shift+3         $resize3
    bindsym 4               $resize4; move position center
    bindsym Shift+4         $resize4

    # Back to normal: Enter or Escape or $mod+r
    bindsym Escape          mode default
  }
  bindsym $mod+r            mode $mode_resize

  mode $mode_session {
    bindsym r               reload
    bindsym Ctrl+r          restart
    bindsym q               exit
    bindsym k               exec --no-startup-id kbind

    bindsym Escape          mode default
  }
  bindsym $mod+period       mode $mode_session

  mode $mode_wm {
    bindsym h               split h
    bindsym v               split v
    bindsym period          layout toggle split
    bindsym s               layout stacking
    bindsym t               layout tabbed
    bindsym c               exec --no-startup-id "pgrep picom && pkill picom || picom"
    bindsym a               exec --no-startup-id \
                              "pgrep autotiling && pkill autotiling || autotiling"
    bindsym x               exec xrandr-toggle; mode "default"
    bindsym 1               move workspace to output eDP-1
    bindsym 2               move workspace to output HDMI-1-0

    bindsym Escape          mode default
  }
  bindsym $mod+s            mode $mode_wm

  mode $mode_qr {
    bindsym i               exec --no-startup-id "qr in"
    bindsym o               exec --no-startup-id "qr out"
    bindsym s               exec --no-startup-id "qr screen"

    bindsym Escape          mode default
  }
  bindsym $mod+Shift+q      mode $mode_qr

  mode $mode_org {
    bindsym t               exec --no-startup-id "myemacs-float ~/data/personal/todo.org"; mode default
    bindsym k               exec --no-startup-id "myemacs-float ~/wiki/knowledge.org"; \
                              mode default
    bindsym j               exec --no-startup-id "myemacs-float ~/wiki/journal.org"; \
                              mode default
    bindsym n               exec --no-startup-id "myemacs-float ~/wiki/notes.org"; \
                              mode default
    bindsym c               exec --no-startup-id "myemacs-float ~/wiki/computers.org"; \
                              mode default
    bindsym l               exec --no-startup-id "myemacs-float ~/wiki/lifestyle.org"; \
                              mode default

    bindsym Escape          mode default
  }
  bindsym $mod+Shift+o      mode $mode_org

  mode $mode_mic {
    bindsym plus            exec --no-startup-id '<<eval(arg="mic-volume-up-filename")>>'
    bindsym minus           exec --no-startup-id '<<eval(arg="mic-volume-down-filename")>>'
    bindsym m               exec --no-startup-id '<<eval(arg="mic-mute-toggle-filename")>>'

    bindsym Escape          mode default
  }
  # TODO
  bindsym F9 mode $mode_mic
#+end_src
* Workspaces
#+begin_src i3wm-config
  set $ws1 "1:wrk"
  set $ws2 "2:study"
  set $ws3 "3:sys"
  set $ws4 "4:org"
  set $ws5 "5:media"
  set $ws6 "6:extra"
  set $ws7 "7:bg"
  set $ws8 "8:vm"
  set $ws9 "9:wrk1"
  set $ws10 "10:wrk2"

  # Switch to workspace
  bindsym $mod+1            workspace $ws1
  bindsym $mod+2            workspace $ws2
  bindsym $mod+3            workspace $ws3
  bindsym $mod+4            workspace $ws4
  bindsym $mod+5            workspace $ws5
  bindsym $mod+6            workspace $ws6
  bindsym $mod+7            workspace $ws7
  bindsym $mod+8            workspace $ws8
  bindsym $mod+9            workspace $ws9
  bindsym $mod+0            workspace $ws10

  # Move focused container to workspace
  bindsym $mod+Shift+1      move  container to  workspace $ws1
  bindsym $mod+Shift+2      move  container to  workspace $ws2
  bindsym $mod+Shift+3      move  container to  workspace $ws3
  bindsym $mod+Shift+4      move  container to  workspace $ws4
  bindsym $mod+Shift+5      move  container to  workspace $ws5
  bindsym $mod+Shift+6      move  container to  workspace $ws6
  bindsym $mod+Shift+7      move  container to  workspace $ws7
  bindsym $mod+Shift+8      move  container to  workspace $ws8
  bindsym $mod+Shift+9      move  container to  workspace $ws9
  bindsym $mod+Shift+0      move  container to  workspace $ws10

  bindsym $mod+n            workspace next
  bindsym $mod+p            workspace prev
  bindsym $mod+Ctrl+o       workspace back_and_forth
#+end_src
* Status bar
#+begin_src i3wm-config
  bar {
  font pango:Source Code Pro, Icons bold 10
  position top
  modifier none
  workspace_buttons yes
  strip_workspace_numbers yes

  status_command i3status | ~/.config/i3status/custom-script.py
  # TODO status_command i3status
  # Trays are bloat, but they are sometimes necessary
  tray_output primary

  i3bar_command i3bar --transparency
  colors {
  # class             border    backgr.   text
  focused_workspace   $col_b_b  $col_b_b  $col_n_k
  inactive_workspace  $col_a_k  $col_a_k  $col_n_m
  urgent_workspace    $col_n_y  $col_n_y  $col_n_k

  background          $col_a_k
  statusline          $col_b_c
  separator           $col_a_m
  }
  }
#+end_src
* Window rules
#+begin_src i3wm-config
  for_window [instance="Float"      class="Alacritty"]  floating enable
  for_window [instance="Float"      class="Alacritty"]  move scratchpad
  for_window [instance="Float"      class="Alacritty"]  scratchpad show

  for_window [window_role="Float"   class="Gvim"]       floating enable
  for_window [floating              class="Gvim"]       $resize1

  for_window [instance="Background" class="Alacritty"]  floating enable
  for_window [instance="Background" class="Alacritty"]  move scratchpad
  for_window [instance="Background" class="Alacritty"]  scratchpad show

  for_window [class="Alacritty" floating]               $resize1
  for_window [class="Alacritty" floating]               move position center

  for_window [class="flameshot"]                        floating enable

  # I use feh to display a QR code, so I make it floating
  for_window [class="feh"]                              floating enable
  for_window [class="feh" floating]                     move position center

  # Display command too sometimes
  for_window [class="Display"]                          floating enable
  for_window [class="Display" floating]                 move position center

  # Matplotlib plots
  for_window [class="matplotlib"]                       floating enable
  for_window [class="matplotlib" floating]              move position center

  # Emacs config editor
  for_window [title="EmacsFloat"]                       floating enable
  for_window [title="EmacsFloat" floating]              move position center
  for_window [title="EmacsFloat"]                       move scratchpad
  for_window [title="EmacsFloat"]                       scratchpad show

  # Emacs magit

  # Octave plots
  for_window [class="GNU Octave"]                       floating enable
  for_window [class="GNU Octave" floating]              move position center
  for_window [class="GNU Octave"]                       move scratchpad
  for_window [class="GNU Octave"]                       scratchpad show

  # Miscellaneous
  for_window [class="SpeedCrunch"]                      floating enable
  for_window [class="SpeedCrunch" floating]             $resize1
  for_window [class="SpeedCrunch" floating]             move position center

  for_window [instance="zbar" class="zbar"]             floating enable

  for_window [class="Typora"]                           floating enable
  for_window [class="Typora" floating]                  move position center

  assign [class="Gimp.*"] number $ws6
  assign [class="VirtualBox Manager"] number $ws8
#+end_src
* i3status
:PROPERTIES:
:header-args: :tangle (haris/tangle-home ".config/i3status/config") :mkdirp yes
:END:

#+begin_src conf :exports none :mkdirp yes
  # -*- mode: emacs-lisp-mode; -*- vim: filetype=conf shiftwidth=2
#+end_src

#+NAME: default-source
#+begin_src shell :results output :tangle no
  pactl get-default-source | tr -d '\n'
#+end_src

#+begin_src python :tangle (haris/tangle-home ".config/i3status/custom-script.py") :tangle-mode (identity #o744)
  #!/usr/bin/env python

  # -*- coding: utf-8 -*-

  # This script is a simple wrapper which prefixes each i3status line with custom
  # information. It is a python reimplementation of:
  # http://code.stapelberg.de/git/i3status/tree/contrib/wrapper.pl
  #
  # To use it, ensure your ~/.i3status.conf contains this line:
  #     output_format = "i3bar"
  # in the 'general' section.
  # Then, in your ~/.i3/config, use:
  #     status_command i3status | ~/i3status/contrib/wrapper.py
  # In the 'bar' section.
  #
  # In its current version it will display the cpu frequency governor, but you
  # are free to change it to display whatever you like, see the comment in the
  # source code below.
  #
  # © 2012 Valentin Haenel <valentin.haenel@gmx.de>
  #
  # This program is free software. It comes without any warranty, to the extent
  # permitted by applicable law. You can redistribute it and/or modify it under
  # the terms of the Do What The Fuck You Want To Public License (WTFPL), Version
  # 2, as published by Sam Hocevar. See http://sam.zoy.org/wtfpl/COPYING for more
  # details.
  #
  # This file has been modified by Haris Gušić <harisgusic.dev@gmail.com>

  import sys
  import json
  import subprocess as sp
  import re

  def print_line(message):
      """ Non-buffered printing to stdout. """
      sys.stdout.write(message + '\n')
      sys.stdout.flush()

  def read_line():
      """ Interrupted respecting reader for stdin. """
      # try reading a line, removing any extra whitespace
      try:
          line = sys.stdin.readline().strip()
          # i3status sends EOF, or an empty line
          if not line:
              sys.exit(3)
          return line
      # exit on ctrl-c
      except KeyboardInterrupt:
          sys.exit()

  def get_mic_volume_widget():
     def run(*args, **kwargs):
         return sp.run(*args, shell=True, stdout=sp.PIPE, encoding='utf-8', check=False, **kwargs)
     source = run('pactl get-default-source').stdout.strip()
     volume_output = run(f'pactl get-source-volume {source}').stdout
     volume = re.search(r'(\d+\.?\d*%)', volume_output)[1]
     is_muted = 'yes' in run(f'pactl get-source-mute {source}').stdout
     if is_muted:
         return None
     else:
         return {
             'full_text': f' {volume}',
             'name': 'volume_mic',
             'separator': False,
             'color': '#d098ff',
         }

  if __name__ == '__main__':
      lines = sp.Popen(['i3status'], stdout=sp.PIPE, universal_newlines=True, encoding='utf-8').stdout
      # Skip the first line which contains the version header.
      print_line(next(lines))

      # The second line contains the start of the infinite array.
      print_line(next(lines))

      for line in lines:
          prefix = ''
          # ignore comma at start of lines
          if line.startswith(','):
              line, prefix = line[1:], ','

          j = json.loads(line)
          # insert information into the start of the json, but could be anywhere
          # CHANGE THIS LINE TO INSERT SOMETHING ELSE
          volume_widget = get_mic_volume_widget()
          if volume_widget:
              j.insert(0, volume_widget)

          # and echo back new encoded json
          print_line(prefix + json.dumps(j))

      i3status.stdout.close()
      sys.exit(i3status.wait())

#+end_src

#+begin_src conf :noweb yes
  # It is important that this file is edited as UTF-8.
  # The following line should contain a sharp   # It is important that this file is edited as UTF-8.
  # The following line should contain a sharp   # It is important that this file is edited as UTF-8.
  # The following line should contain a sharp   # It is important that this file is edited as UTF-8.
  # The following line should contain a sharp   # It is important that this file is edited as UTF-8.
  # The following line should contain a sharp s:
  # ß

  general {
    output_format   = "i3bar"
    colors          = true
    color_good      = "#98eb98"
    color_degraded  = "#f2b374"
    color_bad       = "#ff5555"
    markup          = "pango"
    interval        = 1
  }

  order += "volume master"
  order += "wireless _first_"
  order += "ethernet _first_"
  order += "battery all"
  order += "disk /"
  order += "disk /home/haris/data"
  order += "disk /home/haris/mnt/vm"
  order += "memory"
  order += "cpu_usage"
  order += "cpu_temperature 3"
  order += "tztime localdate"
  order += "tztime localtime"

  volume master {
    format         = "  %volume "
    format_muted   = "  %volume "
  }

  wireless _first_ {
    format_up      = "  %quality"
    format_down    = "  "
    separator      = false
  }

  ethernet _first_ {
    format_up      = "  %speed "
    format_down    = ""
  }

  battery all {
    format_down     = ""
    status_full     = "<span color='#98eb98'> </span>"
    status_bat      = " "
    status_chr      = "<span color='#f2b374'></span>"
    format          = " %status %percentage %remaining "
    threshold_type  = "percentage"
    low_threshold   = "30"
  }

  disk "/" {
    format = " <span color='#d098ff'></span> <span color='#f298c3'>/</span> %avail "
    prefix_type           = binary
    low_threshold         = 20
    threshold_type        = "gbytes_avail"
    separator             = false
    separator_block_width = -6
  }

  disk "/home/haris/data" {
    format                = " <span color='#f298c3'>D:</span> %avail "
    prefix_type           = binary
    low_threshold         = 30
    threshold_type        = "gbytes_avail"
    separator             = false
    separator_block_width = -6
  }

  disk "/home/haris/mnt/vm" {
    format                = " <span color='#f2b374'></span> %avail "
    prefix_type           = binary
    low_threshold         = 15
    threshold_type        = "gbytes_avail"
  }


  memory {
    format                = "  %available"
    threshold_degraded    = "2G"
    threshold_critical    = "1G"
    format_degraded       = " M: %available "
  }

  cpu_usage {
    format                = " %usage "
    max_threshold         = "90"
    degraded_threshold    = "60"
    separator             = false
    separator_block_width = -2
  }

  cpu_temperature 3 {
    format                 = "<span color='#6980fa'></span> %degrees °C"
    format_above_threshold = " <span color='#ff8c8c'></span> %degrees °C "
    max_threshold          = 70
  }

  tztime localdate {
    format = " <span color='#d098ff'> %Y-%m-%d</span>"
  }

  tztime localtime {
    format = " <span color='#f298c3'>  %H:%M:%S</span> "
  }


  tztime localtime {
    format = " <span color='#f298c3'>  %H:%M:%S</span> "
  }


  tztime localtime {
    format = " <span color='#f298c3'>  %H:%M:%S</span> "
  }


  tztime localtime {
    format = " <span color='#f298c3'>  %H:%M:%S</span> "
  }


  tztime localtime {
    format = " <span color='#f298c3'>  %H:%M:%S</span> "
  }
#+end_src
* Dependencies
#+begin_src shell :tangle no
  sudo pacman -S i3status ttf-font-awesome
  paru -S dmenu-height autotiling i3-balance-workspace
#+end_src
* Local variables                                                  :noexport:
# Local Variables:
# eval: (setq-local scriptdir (expand-file-name "~/.config/i3/scripts/"))
# eval: (setq-local mic-volume-up-filename (concat scriptdir "mic-volume-up"))
# eval: (setq-local mic-volume-down-filename (concat scriptdir "mic-volume-down"))
# eval: (setq-local mic-mute-toggle-filename (concat scriptdir "mic-mute-toggle"))
# End:
