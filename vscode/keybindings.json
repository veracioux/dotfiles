// Place your key bindings in this file to override the defaults
[
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "sideBarFocus && !inputFocus && !whichkeyActive"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+x",
		"command": "-magit.resetting"
	},
	{
		"key": "x",
		"command": "-magit.reset-mixed"
	},
	{
		"key": "ctrl+u x",
		"command": "-magit.reset-hard"
	},
	{
		"key": "y",
		"command": "-magit.show-refs"
	},
	{
		"key": "y",
		"command": "vspacecode.showMagitRefMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
	},
	{
		"key": "g",
		"command": "-magit.refresh",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "g",
		"command": "vspacecode.showMagitRefreshMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "shift+k",
		"command": "editor.action.showHover",
		"when": "editorTextFocus && vim.mode == 'Normal'"
	},
	{ "key": "ctrl+q", "command": "-workbench.action.quit" },
	{
		"key": "ctrl+n",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+p",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+n",
		"command": "list.focusDown",
		"when": "referenceSearchVisible"
	},
	{
		"key": "ctrl+p",
		"command": "list.focusUp",
		"when": "referenceSearchVisible"
	},
	{
		"key": "alt+tab",
		"command": "editor.action.inlineSuggest.commit",
		"when": "inlineSuggestionVisible"
	},
    {
		"key": "tab",
		"command": "-editor.action.inlineSuggest.commit"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "alt+1",
		"command": "intellisense-hotkeys.select1",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+2",
		"command": "intellisense-hotkeys.select2",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+3",
		"command": "intellisense-hotkeys.select3",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+4",
		"command": "intellisense-hotkeys.select4",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+5",
		"command": "intellisense-hotkeys.select5",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+6",
		"command": "intellisense-hotkeys.select6",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+7",
		"command": "intellisense-hotkeys.select7",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+8",
		"command": "intellisense-hotkeys.select8",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+9",
		"command": "intellisense-hotkeys.select9",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "alt+shift+e",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"workbench.action.terminal.new",
				{
					"command": "workbench.action.terminal.sendSequence",
					"args": {
						"text": "myemacs -c ${file} & disown\u000D"
					}
				},
				"workbench.action.terminal.kill",
				"workbench.action.closePanel"
			],
			"interval": 100
		},
		"when": "editorTextFocus"
	},
	{
		"key": "alt+shift+t",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"workbench.action.terminal.new",
				{
					"command": "workbench.action.terminal.sendSequence",
					"args": {
						"text": "cd ${fileDirname} && alacritty & disown\u000D"
					}
				},
				"workbench.action.terminal.kill",
				"workbench.action.closePanel"
			],
			"interval": 100
		},
		"when": "editorTextFocus"
	}
]
