#+TITLE: Miscellaneous configs
#+PROPERTY: header-args :mkdirp yes :noweb yes :results silent

* Docker
#+begin_src json :tangle (haris/tangle-home ".docker/config.json")
  {
      "auths": {
          "docker.veracioux.me": {},
          "registry.heroku.com": {},
          "veracioux.me": {}
      },
      "credsStore": "pass",
      "aliases": {
          "builder": "buildx"
      }
  }
#+end_src
* Dunst
:PROPERTIES:
:header-args+: :tangle (haris/tangle-home ".config/dunst/dunstrc")
:END:
#+begin_src conf
  # vim: ft=cfg
  [global]
  follow                  = mouse
  width                   = (50, 300)
  height                  = 400
  origin                  = top-right
  indicate_hidden         = yes
  shrink                  = no            # Shrink window if smaller than width.

  transparency            = 20            # Range: [0, 100]
  separator_height        = 2
  padding                 = 8
  horizontal_padding      = 8
  frame_width             = 1
  frame_color             = "#99a3ff"
  separator_color         = auto
  corner_radius           = 5

  sort                    = yes           # Sort messages by urgency.
  idle_threshold          = 30
#+end_src
** Text
#+begin_src conf
  font                    = Monospace 11
  line_height             = 4
  markup                  = full
  format                  = "<b>%s</b>\n%b"
  alignment               = left
  vertical_alignment      = center
  show_age_threshold      = 60
  word_wrap               = yes
  ellipsize               = middle
  ignore_newline          = no
  stack_duplicates        = true
  hide_duplicate_count    = false
  show_indicators         = yes
#+end_src
** Icons
#+begin_src conf
  icon_position           = left
  min_icon_size           = 0
  max_icon_size           = 32
#+end_src
** History
#+begin_src conf
  sticky_history          = yes
  history_length          = 20
#+end_src
** Misc/advanced
#+begin_src conf
  browser                 = /usr/bin/firefox --new-tab

  always_run_script       = true
  title                   = Dunst
  class                   = Dunst
  force_xinerama          = false
  ignore_dbusclose        = false

  mouse_left_click        = do_action, close_current
  mouse_right_click       = close_all

  [urgency_low]
  background              = "#222222"
  foreground              = "#888888"
  timeout                 = 3

  [urgency_normal]
  background              = "#1e1e1e"
  foreground              = "#99a3ff"
  timeout                 = 10

  [urgency_critical]
  background              = "#1e1e1e"
  foreground              = "#ff8c8c"
  frame_color             = "#ff8c8c"
  timeout                 = 20
#+end_src
* PNPM
PNPM is an alternative to npm and yarn, which uses disk space more efficiently
by keeping a common package store that is shared among projects. It can be
configured to use a server to access the package store, allowing me to have a
store that is shared among all users of my PC.

I use =/var/cache/pnpm-store= as that shared package store. Here's the PNPM config
for the user:
#+NAME: .npmrc
#+begin_src conf :tangle (haris/tangle-home ".npmrc") :mkdirp yes
  use-running-store-server=true
  store-dir=/var/cache/pnpm-store
#+end_src

Note that you will need to have a pnpm store server running. You must set this
up as root.
** Setting up a store server
First, create the store as root and allow all users read and execute (directory)
access.
#+begin_src shell :dir "/sudo::"
  mkdir -p /var/cache/pnpm-store
  chmod 755 /var/cache/pnpm-store
#+end_src

Apply PNPM config to the root user, so the server knows which store-dir to use:
#+begin_src shell :dir "/sudo::"
  cat >>/root/.npmrc <<'EOF'
    <<.npmrc>>
  EOF
#+end_src

Then move the pnpm-server service to the appropriate system directory, start and
enable it.
#+begin_src shell :dir "/sudo::"
  cat >/etc/systemd/system/pnpm-server.service <<'EOF'
    <<pnpm-server.service>>
  EOF
  systemctl enable --now pnpm-server.service
#+end_src
#+NAME: pnpm-server.service
#+begin_src conf
  [Unit]
  Description=PNPM store server

  [Service]
  ExecStart=/usr/bin/pnpm server start --ignore-upload-requests --protocol ipc --ignore-stop-requests
  ExecStop=/usr/bin/pnpm server stop
  Restart=on-failure

  [Install]
  WantedBy=default.target
#+end_src

You should also apply the same settings from the [[.npmrc]] to each user that you
want to have access to the store.

*NOTE*: The store is useful only if it resides in the same filesystem as the node
project. Otherwise you won't be able to make use of the disk space reduction,
making the store pointless. If you have projects on multiple filesystems, you
could run one pnpm server for each filesystem (e.g. by creating
=pnpm-server-<N>.service=), tied to a store that lives on that filesystem.
* TODO Rsync exclude
I'm not sure if this file is actually used by rsync.
#+begin_src text :tangle (haris/tangle-home ".rsync-exclude")
  *.tmp
  *.bak

  *.toc
  *.aux
  *.synctex.gz
  *.log

  *.o
  **/.*Trash-*/
  node_modules/
  __pycache__/
#+end_src
